/*
 * Calibration_Manager.c
 *
 *  Created on: Nov 18, 2024
 *      Author: andyb
 */

#include "stdio.h"
#include <stdbool.h>
#include <weight_manager.h>
#include "gpio.h"
#include "usart.h"


#define DT_PIN GPIO_PIN_8
#define DT_PORT GPIOA
#define SCK_PIN GPIO_PIN_5
#define SCK_PORT GPIOB

struct MuxCombo {
  unsigned char C;
  unsigned char B;
  unsigned char A;
};

const struct MuxCombo MuxCombos[] = {
  {0, 0, 0},
  {0, 0, 1},
  {0, 1, 0},
  {0, 1, 1},
  {1, 0, 0},
  {1, 0, 1},
  {1, 1, 0}
};

//Code to enable printf statements
int _write(int file, char *data, int len) {
    HAL_UART_Transmit(&huart2, (uint8_t*)data, len, HAL_MAX_DELAY); // Replace &huart2 with your UART instance
    return len;
}

uint32_t tare = 0;
float knownOriginal = 20000;  // in milli-gram
float knownHX711 = 1;
int weight = 0;

uint16_t A_mast;
uint16_t B_mast;
uint16_t C_mast;

uint16_t A_slave;
uint16_t B_slave;
uint16_t C_slave;

//uint32_t setTare(){
//	int weight_tare = 0;
//
//
//	HAL_Delay(100);
//	weight_tare = weighRaw();
//
//	tare = weight_tare;
//
//	printf("Tare Set: %d\n\r", weight_tare);
//}
//
//float getKnown(){
//	printf("Input the weight of the object in miligrams\n\r");
//	float tempOffsetWeight = 0;
//	scanf("%f", &tempOffsetWeight);
//
//	return tempOffsetWeight;
//
//}
//
//float getReal(){
//
//	int weight_offset = weighRawTare();
//	HAL_Delay(10);
//
//	printf("Read weight: %d\n\r", weight_offset);
//	return weight_offset;
//
//}

uint32_t getTare(){
	printf("Remove all weight from the drawer(5 seconds)\n\r");
	HAL_Delay(5000);
	printf("Gathering initial Tare of Load Cell...\n\r");
	int weight_temp = 0;

	for(uint16_t i = 1; i <= 4; i++){
			weight_temp = (int)weighRaw();
			printf("Tare attempt %d: %d\n\r", i, weight_temp);
			HAL_Delay(10);
		}
	printf("Tare Set: %d\n\r", weight_temp);
	return weight_temp;
}

void Calibrate(){
	printf("Beginning with Row: 1 Drawer: 1\n\r");


	for(int i = 1; i <= 4; i++){
		printf("Row %d", i);
		if(i == 1){
			for(int j = 1; j <= 4; j++){
				printf("Drawer %d", j);
				tare = getTare();
				printf("Place the calibration weight on the drawer(5 seconds)\n\r");
				HAL_Delay(5000);

				knownHX711 = weighRawTare();
				printf("Read weight: %d", knownHX711);


			}
		}
		else{
			for(int k = 1; k <= 7; k++){

			}
		}

	}
}

