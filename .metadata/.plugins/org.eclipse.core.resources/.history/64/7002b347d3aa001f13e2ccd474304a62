/*
 * Manager.c
 *
 *  Created on: Nov 18, 2024
 *      Author: andyb
 */

#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#include <usart.h>
#include <tim.h>

#include <weight_manager.h>
#include <mux_manager.h>
#include <io_manager.h>
#include <file_manager.h>


#define DT_PIN GPIO_PIN_8
#define DT_PORT GPIOA
#define SCK_PIN GPIO_PIN_5
#define SCK_PORT GPIOB

struct MuxCombo {
  unsigned char C;
  unsigned char B;
  unsigned char A;
};

void main_function(struct MuxCombo MuxCombos){

	uint32_t tare = 0;
	float knownOriginal = 20000;
	float knownHX711 = 1;
	int weight = 0;
	int thresh = 0;

	for(int i = 1; i <= 4; i++){
			printf("Row %d", i);

			uint16_t A_mast = MuxCombos[i].A;
			uint16_t B_mast = MuxCombos[i].B;
			uint16_t C_mast = MuxCombos[i].C;

			muxSET(A_mast, B_mast, C_mast, 1);

			if(i == 1){
				for(int j = 1; j <= 4; j++){

					uint16_t A_slave = MuxCombos[j].A;
					uint16_t B_slave = MuxCombos[j].B;
					uint16_t C_slave = MuxCombos[j].C;

					muxSET(A_slave, B_slave, C_slave, 0);

					printf("Drawer %d", j);

					for(int p = 0; p < 4; p++){

						int weight = weigh(tare, knownHX711);
						printf("Weight: %d", weight);
						HAL_Delay(400);
					}

				}
			}
			else{
				for(int k = 1; k <= 7; k++){

					uint16_t A_slave = MuxCombos[k].A;
					uint16_t B_slave = MuxCombos[k].B;
					uint16_t C_slave = MuxCombos[k].C;

					muxSET(A_slave, B_slave, C_slave, 0);

					printf("Drawer %d", k);
					tare = getTare();
					printf("Place the calibration weight on the drawer(5 seconds)\n\r");
					HAL_Delay(5000);

					knownHX711 = weighRawTare(tare);
					printf("Read weight: %f", knownHX711);

					for(int p = 0; p < 4; p++){
						int weight = weigh(tare, knownHX711);
						printf("Weight: %d", weight);
						HAL_Delay(400);
					}



				}
			}
	}

}
